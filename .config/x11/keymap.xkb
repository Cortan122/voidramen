xkb_keymap {
	xkb_keycodes  { include "evdev+aliases(qwerty)"	};
	xkb_types     {
		include "complete"

		type "THREE_LEVEL_ALT" {
			modifiers = Shift+Alt;
			map[Shift] = Level2;
			map[Alt] = Level3;
			map[Shift+Alt] = Level3;
			preserve[Shift+Alt] = Shift;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
			level_name[Level3] = "Alt";
		};
		type "THREE_LEVEL_ALPHABETIC_ALT" {
			modifiers = Shift+Lock+Alt;
			map[Shift] = Level2;
			map[Lock] = Level2;
			map[Alt] = Level3;
			map[Shift+Alt] = Level3;
			map[Lock+Alt] = Level3;
			map[Shift+Lock+Alt] = Level3;
			preserve[Shift+Alt] = Shift;
			preserve[Lock+Alt] = Lock;
			preserve[Shift+Lock+Alt] = Shift+Lock;
			level_name[Level1] = "Base";
			level_name[Level2] = "Shift";
			level_name[Level3] = "Alt";
		};
	};
	xkb_compat    {
		include "complete+ledcaps(group_lock)"

		virtual_modifiers NumLock,Alt,LevelThree,LevelFive,Meta,Super,Hyper,ScrollLock;

		interpret Alt_L+AnyOf(all) {
			virtualModifier = Alt;
			useModMapMods = level1;
			action = SetMods(modifiers=Alt,clearLocks);
		};
	};
	xkb_symbols   {
		include "pc+us+ru:2+inet(evdev)+group(caps_toggle)+group(alt_shift_toggle)+group(toggle):1+group(toggle):2"

		key <CAPS> {
			type = "TWO_LEVEL",
			symbols[Group1] = [  ISO_Next_Group,       Multi_key ]
		};

		key <RTSH> { [ Shift_R, Shift_R ] };

		key <I255> { type="ALPHABETIC", [U00df, U1E9E] }; // "ß"
		key <I217> { type="ALPHABETIC", [U00f6, U00D6] }; // "ö"
		key <I219> { type="ALPHABETIC", [U00e4, U00C4] }; // "ä"
		key <I222> { type="ALPHABETIC", [U00fc, U00DC] }; // "ü"
		key <I230> { type="ALPHABETIC", [U00e9, U00C9] }; // "é"
		key <I248> { type="ALPHABETIC", [U00bf, U00bf] }; // "¿"

		key <AC02> {
			type = "THREE_LEVEL_ALPHABETIC_ALT",
			symbols[Group1] = [               s,               S,                s,               S ],
			symbols[Group2] = [   Cyrillic_yeru,   Cyrillic_YERU,    Cyrillic_yeru,   Cyrillic_YERU ],
			actions[Group1] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I255>,clearmods=Alt) ],
			actions[Group2] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I255>,clearmods=Alt) ]
		};
		key <AD09> {
			type = "THREE_LEVEL_ALPHABETIC_ALT",
			symbols[Group1] = [               o,               O,                o,               O ],
			symbols[Group2] = [  Cyrillic_shcha,  Cyrillic_SHCHA,   Cyrillic_shcha,  Cyrillic_SHCHA ],
			actions[Group1] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I217>,clearmods=Alt) ],
			actions[Group2] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I217>,clearmods=Alt) ]
		};
		key <AC01> {
			type = "THREE_LEVEL_ALPHABETIC_ALT",
			symbols[Group1] = [               a,               A,                a,               A ],
			symbols[Group2] = [     Cyrillic_ef,     Cyrillic_EF,      Cyrillic_ef,     Cyrillic_EF ],
			actions[Group1] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I219>,clearmods=Alt) ],
			actions[Group2] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I219>,clearmods=Alt) ]
		};
		key <AD07> {
			type = "THREE_LEVEL_ALPHABETIC_ALT",
			symbols[Group1] = [               u,               U,                u,               U ],
			symbols[Group2] = [    Cyrillic_ghe,    Cyrillic_GHE,     Cyrillic_ghe,    Cyrillic_GHE ],
			actions[Group1] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I222>,clearmods=Alt) ],
			actions[Group2] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I222>,clearmods=Alt) ]
		};
		key <AD03> {
			type = "THREE_LEVEL_ALPHABETIC_ALT",
			symbols[Group1] = [               e,               E,                e,               E ],
			symbols[Group2] = [      Cyrillic_u,      Cyrillic_U,       Cyrillic_u,      Cyrillic_U ],
			actions[Group1] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I230>,clearmods=Alt) ],
			actions[Group2] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I230>,clearmods=Alt) ]
		};
		key <AB10> {
			type = "THREE_LEVEL_ALT",
			symbols[Group1] = [           slash,        question,            slash,        question ],
			symbols[Group2] = [          period,           comma,           period,           comma ],
			actions[Group1] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I248>,clearmods=Alt) ],
			actions[Group2] = [      NoAction(),      NoAction(), RedirectKey(keycode=<I248>,clearmods=Alt) ]
		};
	};
	xkb_geometry  { include "pc(pc105)"	};
};
